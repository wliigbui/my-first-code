#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
using namespace std;



class Phone
{
public:
	Phone()
	{
		cout << "手机的默认构造函数调用" << endl;
	}
	Phone(string name)
	{
		cout << "手机的有参构造函数调用" << endl;
		m_PhoneName = name;
	}
	~Phone()
	{
		cout << "手机的析构函数调用" << endl;
	}

	string m_PhoneName;
};

class Game
{
public:
	Game()
	{
		cout << "游戏的默认构造函数调用" << endl;
	}
	Game(string name)
	{
		cout << "游戏的有参构造函数调用" << endl;
		m_GameName = name;
	}
	~Game()
	{
		cout << "游戏的析构函数调用" << endl;
	}

	string m_GameName;
};
class Person
{
public:
	Person()
	{
		cout << "Person的默认构造函数调用" << endl;
	}
	Person(string name,string phonename,string gamename):m_Name(name),m_Phone(phonename),m_Game(gamename)
	{
		cout << "Person的有参构造函数调用" << endl;
	}

	void playGame()
	{
		cout << m_Name << "拿着" << m_Phone.m_PhoneName << "手机玩" << m_Game.m_GameName << endl;
	}
	~Person()
	{
		cout << "Person的析构函数调用" << endl;
	}
	string m_Name;
	Phone m_Phone;
	Game m_Game;
};


//类对象作为成员，构造顺序：先类对象，再类；析构相反。
void test01()
{
	Person p("狗蛋","苹果","切水果");
	p.playGame();


}

int main()
{
	test01();
	return EXIT_SUCCESS;
}
