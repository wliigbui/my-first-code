#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
using namespace std;

//设计立方体类（cube），
//求出立方体的表面积（2*a*b + 2*a*c + 2*b*c）和体积（a*b*c），
//分别用全局函数和成员函数判断两个立方体是否相等。

class Cube
{
public:
	//设置长
	void setL(int l)
	{
		m_L = l;
	}
	//获取长
	int getL()
	{
		return m_L;
	}
	//设置宽
	void setW(int w)
	{
		m_W = w;
	}
	//获取宽
	int getW()
	{
		return m_W;
	}
	//设置高
	void setH(int h)
	{
		m_H = h;
	}
	//获取高
	int getH()
	{
		return m_H;
	}

	//求表面积
	void getCubeS()
	{
		int s = 2 *( m_L*m_H + m_W*m_L + m_H*m_W);
		cout << "立方体的表面积是： " << s << endl;
	}
	//求立方体体积
	void getCubeV()
	{
		int v = m_H * m_L * m_W;
		cout << "立方体的体积是： " << v << endl;
	}

	//通过成员函数来判断两个立方体是否相等
	bool compareCubeByclass(Cube &cub)
	{
		bool ret = m_L == cub.getL() && m_H == cub.getH() && m_W == cub.getW();		
		return ret;
				
	}
private:
	int m_L;//长
	int m_W;//宽
	int m_H;//高
};


//全局函数判断  两个立方体是否相等
bool compareCube(Cube& cub1, Cube& cub2)
{
	if (cub1.getL() == cub2.getL() && cub1.getH() == cub2.getH() && cub1.getW() == cub2.getW())
	{
		return true;
	}
	return false;

}
void test01()
{
	Cube c1;
	c1.setL(10);
	c1.setW(10);
	c1.setH(10);

	//c1.getCubeS();//600
	//c1.getCubeV();//1000


	Cube c2;
	c2.setL(10);
	c2.setW(10);
	c2.setH(10);

	bool ret = compareCube(c1, c2);
	if (ret)
	{
		cout << "全局函数::c1 和 c2 是相等的！" << endl;
	}
	else
	{
		cout << "全局函数::c1 和 c2 不是相等的！" << endl;
	}

	bool ret2 = c1.compareCubeByclass(c2);
	if (ret2)
	{
		cout << "成员函数::c1 和 c2 是相等的！" << endl;
	}
	else
	{
		cout << "成员函数::c1 和 c2 不是相等的！" << endl;
	}
}
int main()
{
	test01();

	return EXIT_SUCCESS;
}
