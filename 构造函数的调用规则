#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
using namespace std;

class MyClass
{
public:
	/*MyClass()
	{
		cout << "默认构造函数" << endl;
	}*/

	MyClass(int a)
	{
		cout << "有参构造函数" << endl;
	}

	int m_A;
};

//1、当我们提供了有参构造函数，那么系统不提供默认构造函数
//但是系统还是会提供默认的拷贝构造
void test01()
{
	MyClass c1(1);
	c1.m_A = 10;
	MyClass c2(c1);
	cout << c2.m_A << endl;
}



//2、当我们提供拷贝构造，系统不提供其他构造
class MyClass2
{
public:
	/*MyClass()
	{
		cout << "默认构造函数" << endl;
	}*/

	/*MyClass2(int a)
	{
		cout << "有参构造函数" << endl;
	}*/

	MyClass2(const MyClass& c)
	{

	}
	int m_A;
};

void test02()
{
	// MyClass2 c1;
}
int main()
{
	//test01();
	//test02();
	return EXIT_SUCCESS;
}
